单元测试
	1、自动化测试
		1.1、通过断言的方式来确定结果是否正确Assert(静态导入)
		1.2、导入junit的包
		1.3、编写服务代码
		1.4、在项目下创建一个source folder(source folder表示在编译时这个文件夹下的东西会自动被加载到classpath中)
			要求被测试的类要与测试类在同一个包下(避免导包)
			要求测试类以Test开头或者Test结尾
	2、基于测试开发的方式和优点(TDD思想)
		TDD：Test Driven Devolepment，即测试在先，编码在后的开发方式。在敏捷开发中
		被称为“测试第一的开发”。
		优点：1） 符合“缺陷预防”的思想
			  2） 能够提高效率、降低开发成本、提高软件的质量
			  
		过程如下: 为新性能写一个测试----->
							编译--->修正编译错误--->编写代码-->
										测试运行并通过-->如果需要重构
														--->返回第一步
	3、stub和mock
	4、在容器中测试
	 4.1、 jetty
	 4.2、 catcus
	5、dbunit
	
关于测试的一些知识:
软件测试按照层次划分：
a)底层层次：单元测试
b)接口层次：集成测试
c)系统层次：系统测试
d)用户层次：验收测试

驱动程序与桩程序
驱动程序亦称驱动模块，用以模拟被测模块的上级模块。用来接受测试数据和调用被测试模块并把
		相应数据传递给被测模块
桩程序：用以模拟被测模块的下层模块，只进行很少的数据处理，如打印入口或者返回

	驱动模块 ----> 被测模块 ---> 桩程序

junit3和junit4的区别
在junit3中要创建一个测试类必须要求这个类继承与TestCase，且里面的测试方法必须是testXXX
在junit3中，如果希望指定某个测试方法运行之前运行某个初始化方法，这个方法的名称必须是setUp,如果希望在某个测试方法运行之后运行某个释放资源的方法，这个方法的名称必须是tearDown
 在Junit4中，一个POJO类就是一个测试类，测试方法通过@Test来标识，初始化方法通过@Before，释放资源的方法通过@After来标注。但是为了让junit4中的测试类在Junit3中也可以使用，习惯于把初始化方法命名为setUp，
 释放资源的方法命名为tearDown，测试方法也同样以test开头