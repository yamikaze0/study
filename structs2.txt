1.首先将相关jar包拷入到lib文件夹中并加入到路径中
2.在src目录下建立struts.xml文件。再配置web.xml文件设置拦截器
	下列所使用的struts2拦截器是struts
 	<filter>
       	 	<filter-name>struts2</filter-name>
        		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    	</filter>

   	 <filter-mapping>
        		<filter-name>struts2</filter-name>
        		<url-pattern>/*</url-pattern>
   	 </filter-mapping>

3.建立Action类继承于ActionSupport
4.配置struts.xml文件。配置action和返回结果集

	<package name="default" namespace="/" extends="struts-default">
			<action name="helloAction" class="cn.yamikaze.action.HelloAction">
				<result	name="success">/WEB-INF/hello/hello.jsp</result>
			</action> 
 	  </package>

配置action还可以使用动态方法的方式配置，但是需要在struts.xml中开启动态方法调用
此外还有基于通配符的配置(推荐使用这种)。

///////////////////////////////////////////////////////////////////////////

struts中传值
**  把值从Action往JSP页面传
    1. 在Action中定义属性，并为属性设置get/set方法。然后在页面中用<s:property vlaue="属性名"/>，可以使用EL表达式 ${属性名}
    2. ActionContext.getContext().put(key,value) 然后在页面中用<s:property vlaue="#key名"/> 可以使用EL表达式${属性名}
    3. ServletActionContext.getRequest().setAttribute(key,value) 然后在页面中用<s:property vlaue="#request.key名"/> 可以使用EL表达式${属性名}
** 把值从页面往Action传
    直接定义属性，并给属性添加get/set方法
//////////////////////////////////////////////////////////////////
Ognl
Ognl.getValue(Object , Object root)
	
	@Test
	public void test01() throws OgnlException {
		User u = new User(1, "张三", "男");
		System.out.println(Ognl.getValue("id", u));
		System.out.println(Ognl.getValue("username", u));
	}
	
	@Test
	public void test02() throws OgnlException {
		List<User> users = new ArrayList<User>();
		users.add(new User(1, "张三", "男"));
		users.add(new User(2, "李四", "男"));
		users.add(new User(3, "王五", "男"));
		users.add(new User(4, "张吧", "男"));
		
		System.out.println(Ognl.getValue("#root[0].username", users));
		System.out.println(Ognl.getValue("#root[1]", users));
		System.out.println(Ognl.getValue("get(0).sum(5,10)", users));
		
	}
	
	@Test
	public void test03() throws OgnlException {
		Map<String , User> map = new HashMap<String,User>();
		map.put("user", new User(1, "张三", "男"));
		User u = new User(1, "张三", "男");
		System.out.println(Ognl.getValue("username", map, u));
		System.out.println(Ognl.getValue("#user.username", map, u));
		System.out.println(Ognl.getValue("#user.sum(1,3)", map, u));
		
	}

struts的ValueStack
ValueStack分为两部分ActionContext和CompoundRoot
使用ActionContext.getContext().put(K,V)方法放入的数据是在存储在一个Map中的，获取这部分的数据需要使用加上#号访问
而且session和request等对象也是放在ActionContext中的
CompoundRoot是一个使用了List列表的栈，push入栈，pop出栈
访问一个Action时，首先将这个Action入栈，即访问Action时Action处于这个栈的最上层。


struts的ModernDriven
可以将一个对象放到ValueStack的最上面。
使用了ModernDriven之后就相当于在每个方法里面加上这一句
ActionContext.getContext().getValueStack().push(Object);
这样就可以将值传入对象中

