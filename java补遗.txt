1.JDK7的try-with-resources自动关闭资源需要类实现了AutoCloseable接口。ps：Closeable接口是AutoCloseable接口的子接口
2.异常处理尽可能抛出比较准确的异常或者信息。
3.在java doc中声明记录所抛出的异常
4.异常的网从小到大捕获。
5.最好不要再catch块中使用Throwable，这样JVM抛出的诸如OOM异常也会被捕获。
6.不要忽略异常
7.包装异常、而不是记录并抛出，给异常一个包装，能更清晰的指出错误。如果不包装，将会丢失原始的异常与堆栈信息
8.如果要记录网站的访问次数，文件的下载次数，为了同步 且为了高效率，可以重新建立一张表，然后插入多条记录，更新时随机选择一条记录更新，然后获取符合条件的总记录
  eg、insert into tb_info(user_id, other_field) value(?,?) on duplicate key update other_field = ? where user_id = ?
  这样会在主键或者unique key重复时执行update语句，不重复则执行insert语句

1、代码遇到NoClassFoundException 或者 NoClassDefError。不要想肯定是你的jar少导了。
2、代码遇到NoSuchMethodError 或者NoSuchFieldError。这一定是你jar的版本低了。
   ps：为什么不是版本高了？正常来说，如果低版本的类或者变量开发者不建议使用，会将其声明为过时，而不是删除，而且会使用新方法来替代，
       例如：Mybatis与Spring整合注入sqlSessionFactory，采用的方法是setSqlSessionFactoryBeanName 而不是setSqlSessionFactory(该方法已过时)

3、开发Web项目时，无论怎么检查都报404错误，但后台代码不报错。这时候请检查下你的视图映射配置，尤其使用Spring Boot时要特别注意。
   ps：因为Spring Boot包含了许多默认配置，可能你没有覆盖或者配置这些配置。

4、数据库表设计：不要添加物理关联（外键），采用逻辑关联，使用代码控制，更加灵活.
5、建好实体类,添加新的构造函数一定要添加一个无参构造函数，因为Spring MVC、Mybatis等都是使用无参构造函数构建对象。
6、html页面编码时，标签一定要闭合，标签一定要闭合，标签一定要闭合。
7、如果发现界面样式不对。清空缓存再进行操作试试。再不行，检查css引入是否正确。
8、页面调试请不要使用alert，使用console代替，上线后清除所有的调试信息。
9、sql语句表别名 一定不能与Mysql保留字相同。
10、后台代码做输出时，使用log代替System.out。